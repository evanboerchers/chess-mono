var e=Object.defineProperty,t=(t,s,o)=>((t,s,o)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[s]=o)(t,"symbol"!=typeof s?s+"":s,o);import{p as s}from"./phaser-nUMyL2sp.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();class o extends s.Scene{constructor(){super("Boot")}preload(){this.load.image("blackPawn","assets/b_pawn.webp"),this.load.image("blackRook","assets/b_rook.webp"),this.load.image("blackKnight","assets/b_knight.webp"),this.load.image("blackBishop","assets/b_bishop.webp"),this.load.image("blackQueen","assets/b_queen.webp"),this.load.image("blackKing","assets/b_king.webp"),this.load.image("whitePawn","assets/w_pawn.webp"),this.load.image("whiteRook","assets/w_rook.webp"),this.load.image("whiteKnight","assets/w_knight.webp"),this.load.image("whiteBishop","assets/w_bishop.webp"),this.load.image("whiteQueen","assets/w_queen.webp"),this.load.image("whiteKing","assets/w_king.webp")}create(){this.scene.start("Preloader")}}const i={name:"default",board:{lightSquareColour:15784373,darkSquareColour:11896931,highlightColour:255,attackColour:16711680,moveColour:65280}},r=new class{constructor(){t(this,"themes",[i]),t(this,"currentTheme",i)}addTheme(e){this.themes.push(e)}setTheme(e){const t=this.themes.find((t=>t.name===e));t?this.currentTheme=t:console.error(`Theme ${e} not found`)}getTheme(){return this.currentTheme}};var c=(e=>(e[e.Light=0]="Light",e[e.Dark=1]="Dark",e))(c||{});class a extends Phaser.GameObjects.Container{constructor(e,s,o,i,r,c,a){super(e,s,o),t(this,"background"),t(this,"_piece"),t(this,"colour"),t(this,"coordinate"),this.colour=r,this.background=new Phaser.GameObjects.Rectangle(e,0,0,i,i,this.getBackgroundColour()),this.add(this.background),this._piece=a,this.width=i,this.height=i,this.coordinate=c}getBackgroundColour(){return 0===this.colour?r.getTheme().board.lightSquareColour:r.getTheme().board.darkSquareColour}addPiece(e){this._piece=e,this._piece.setDisplaySize(this.width,this.height),this.add(this._piece)}removePiece(){this._piece&&(this.remove(this._piece),this._piece=void 0)}get piece(){return this._piece}highlight(){this.background.setFillStyle(r.getTheme().board.highlightColour)}highlightCapture(){this.background.setFillStyle(r.getTheme().board.attackColour)}highlightMove(){this.background.setFillStyle(r.getTheme().board.moveColour)}clearHighlight(){this.background.setFillStyle(this.getBackgroundColour())}interactive(e){e?(this.registerClick(),this.setInteractive({useHandCursor:!0})):(this.deregisterClick(),this.setInteractive(!1))}handleClick(){this.emit("click",this)}deregisterClick(){this.off("pointerdown",this.handleClick,this)}registerClick(){this.on("pointerdown",this.handleClick,this)}}var h=(e=>(e.Wizard="wizard",e.Queen="queen",e.Knight="knight",e.Bishop="bishop",e.Rook="rook",e.Pawn="pawn",e))(h||{}),l=(e=>(e.White="white",e.Black="black",e))(l||{});class n extends Phaser.GameObjects.Sprite{constructor(e,s,o,i,r,c){super(e,s,o,((e,t)=>{let s,o;switch(s=t===l.Black?"black":"white",e){case h.Wizard:o="King";break;case h.Queen:o="Queen";break;case h.Knight:o="Knight";break;case h.Bishop:o="Bishop";break;case h.Rook:o="Rook";break;default:o="Pawn"}return s+o})(i,r)),t(this,"pieceType"),t(this,"colour"),t(this,"id"),this.pieceType=i,this.colour=r,c&&(this.name=c)}}class d extends Phaser.GameObjects.Container{constructor(e,s,o,i,r){super(e,s,o),t(this,"rows",8),t(this,"columns",8),t(this,"boardWidth"),t(this,"squares"),t(this,"pieces"),t(this,"boardModel"),t(this,"selectedPiece",null),this.boardModel=r,this.boardWidth=i,this.squares=Array.from({length:this.rows},(()=>Array(this.columns).fill(null))),e.add.existing(this),this.drawBoard(),this.drawPieces()}drawBoard(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++){const s=this.boardWidth/this.rows,o=s*t+s/2,i=s*e+s/2,r=(e+t)%2==0?c.Light:c.Dark,h=new a(this.scene,o,i,s,r,{row:e,col:t});h.name=`square_${e},${t}`,this.squares[e][t]=h,this.add(h)}}clearBoard(){this.pieces.forEach((e=>e.destroy()))}drawPieces(){this.pieces=[];const e=this.boardModel.board;for(let t=0;t<this.rows;t++)for(let s=0;s<this.columns;s++){const o=e[t][s].piece;if(o){const e=new n(this.scene,0,0,o.type,o.colour,`${o.colour}${o.type}_${t},${s}`);this.pieces.push(e),this.squares[t][s].addPiece(e)}}}highlightSquare(e){this.getBoardSquare(e).highlight()}highlightCaptureSquare(e){this.getBoardSquare(e).highlightCapture()}highlightMoveSquare(e){this.getBoardSquare(e).highlightMove()}clearHighlights(){this.squares.flat().forEach((e=>e.clearHighlight()))}enablePieceInteractions(e){this.squares.flat().forEach((t=>{t._piece&&t._piece.colour===e&&t.setInteractive({useHandCursor:!0})}))}disableInteractive(){return this.squares.flat().forEach((e=>{e.disableInteractive()})),this}movePiece(e,t){const s=this.squares[e.row][e.col]._piece;s&&(this.squares[e.row][e.col].removePiece(),this.squares[t.row][t.col].addPiece(s))}capturePiece(e,t){const s=this.squares[e.row][e.col]._piece,o=this.squares[t.row][t.col]._piece;s&&o&&(this.squares[e.row][e.col].remove(s),this.squares[t.row][t.col].remove(o),this.squares[t.row][t.col].addPiece(s))}getBoardSquare(e){return this.squares[e.row][e.col]}getPiece(e){return this.squares[e.row][e.col].piece}flip(){0!==this.angle?(this.angle=0,this.setPosition(this.x-this.getBounds().width,this.y-this.getBounds().height),this.squares.flat().forEach((e=>{e._piece&&(e._piece.angle=0)}))):(this.angle=180,this.setPosition(this.x+this.getBounds().width,this.y+this.getBounds().height),this.squares.flat().forEach((e=>{e._piece&&(e._piece.angle=180)})))}}const u=e=>(t,s)=>{const o=[],i=[],r=[];return e.forEach((e=>{const{moves:c,captures:a,castles:h}=e(t,s);o.push(...c),i.push(...a),r.push(...h)})),{moves:o,captures:i,castles:r}},g=(e,t)=>{const{row:s,col:o}=e,i=[],r=[];return[{row:1,col:1},{row:1,col:-1},{row:-1,col:1},{row:-1,col:-1}].forEach((e=>{var c,a;let h=s+e.row,l=o+e.col;for(;h>=0&&h<8&&l>=0&&l<8;){if(t[h][l].piece){(null==(c=t[h][l].piece)?void 0:c.colour)!==(null==(a=t[s][o].piece)?void 0:a.colour)&&r.push({row:h,col:l});break}i.push({row:h,col:l}),h+=e.row,l+=e.col}})),{moves:i,captures:r,castles:[]}},p=(e,t)=>{const{row:s,col:o}=e,i=[],r=[];return[{row:1,col:0},{row:-1,col:0},{row:0,col:1},{row:0,col:-1}].forEach((e=>{var c,a;let h=s+e.row,l=o+e.col;for(;h>=0&&h<8&&l>=0&&l<8;){if(t[h][l].piece){(null==(c=t[h][l].piece)?void 0:c.colour)!==(null==(a=t[s][o].piece)?void 0:a.colour)&&r.push({row:h,col:l});break}i.push({row:h,col:l}),h+=e.row,l+=e.col}})),{moves:i,captures:r,castles:[]}},w=(e,t)=>{const{row:s,col:o}=e,i=[],r=[];return[{row:1,col:0},{row:-1,col:0},{row:0,col:1},{row:0,col:-1},{row:1,col:1},{row:1,col:-1},{row:-1,col:1},{row:-1,col:-1}].forEach((e=>{var c,a;const h=s+e.row,l=o+e.col;h>=0&&h<8&&l>=0&&l<8&&(t[h][l].piece?(null==(c=t[h][l].piece)?void 0:c.colour)!==(null==(a=t[s][o].piece)?void 0:a.colour)&&r.push({row:h,col:l}):i.push({row:h,col:l}))})),{moves:i,captures:r,castles:[]}},m={[h.Pawn]:u([(e,t)=>{const{row:s,col:o}=e,i=t[s][o].piece,r=[];console.log(e);const c=(null==i?void 0:i.colour)===l.White?-1:1;let a=s+c;return a>=0&&a<8&&!t[a][o].piece&&r.push({row:a,col:o}),(6===s&&(null==i?void 0:i.colour)===l.White||1===s&&(null==i?void 0:i.colour)===l.Black)&&(a+=c,a>=0&&a<8&&!t[a][o].piece&&r.push({row:a,col:o})),{moves:r,captures:[],castles:[]}},(e,t)=>{var s;const{row:o,col:i}=e,r=[],c=(null==(s=t[o][i].piece)?void 0:s.colour)===l.White?-1:1;return[{row:c,col:1},{row:c,col:-1}].forEach((e=>{var s,c;const a=o+e.row,h=i+e.col;a>=0&&a<8&&h>=0&&h<8&&t[a][h].piece&&(null==(s=t[a][h].piece)?void 0:s.colour)!==(null==(c=t[o][i].piece)?void 0:c.colour)&&r.push({row:a,col:h})})),{moves:[],captures:r,castles:[]}}]),[h.Rook]:p,[h.Knight]:(e,t)=>{const{row:s,col:o}=e,i=[],r=[];return[{row:2,col:1},{row:2,col:-1},{row:-2,col:1},{row:-2,col:-1},{row:1,col:2},{row:1,col:-2},{row:-1,col:2},{row:-1,col:-2}].forEach((e=>{var c,a;const h=s+e.row,l=o+e.col;h>=0&&h<8&&l>=0&&l<8&&(t[h][l].piece?(null==(c=t[h][l].piece)?void 0:c.colour)!==(null==(a=t[s][o].piece)?void 0:a.colour)&&r.push({row:h,col:l}):i.push({row:h,col:l}))})),{moves:i,captures:r,castles:[]}},[h.Bishop]:g,[h.Wizard]:u([w,w]),[h.Queen]:u([g,p])};class b{constructor(){t(this,"_board"),t(this,"_lastMove"),this._board=Array.from({length:8},(()=>Array(8).fill(null))),this.init()}init(){for(let e=0;e<8;e++)for(let t=0;t<8;t++)this._board[e][t]={piece:null,coordinate:{row:e,col:t}};this.initStartingPeices()}initStartingPeices(){const e=[h.Rook,h.Knight,h.Bishop,h.Queen,h.Wizard,h.Bishop,h.Knight,h.Rook];for(let t=0;t<8;t++)this._board[0][t].piece={type:e[t],colour:l.Black},this._board[1][t].piece={type:h.Pawn,colour:l.Black};for(let t=0;t<8;t++)this._board[7][t].piece={type:e[t],colour:l.White},this._board[6][t].piece={type:h.Pawn,colour:l.White}}getPotentialMoves(e){const t=this._board[e.row][e.col].piece;return t?m[t.type](e,this._board):{moves:[],captures:[],castles:[]}}movePiece(e,t){this._lastMove={from:e,to:t},this._board[t.row][t.col].piece=this._board[e.row][e.col].piece,this._board[e.row][e.col].piece=null}capturePiece(e,t){this._board[t.row][t.col].piece=this._board[e.row][e.col].piece,this._board[e.row][e.col].piece=null}get board(){return this._board}set board(e){this._board=e}}class f{constructor(e,s,o){t(this,"_name"),t(this,"_mana"),t(this,"_cards"),this._name=e,this._mana=s,this._cards=o}get name(){return this._name}get score(){return this._mana}set score(e){this._mana=e}get cards(){return this._cards}set cards(e){this._cards=e}}class k{constructor(){t(this,"boardModel"),t(this,"player1"),t(this,"player2"),this.boardModel=new b,this.player1=new f("Player 1",100,["card1","card2","card3"]),this.player2=new f("Player 2",100,["card1","card2","card3"])}}class v{constructor(e){t(this,"gameScene"),t(this,"gameModel"),t(this,"_currentPlayer"),t(this,"_selectedPiece",null),this.gameScene=e,this.gameModel=new k}startGame(){this.setupWhiteTurn()}clearBoardHighlights(){this.gameScene.board.clearHighlights()}setupWhiteTurn(){console.log("setting up white turn"),this.gameScene.currentPlayer=l.White,this.setupPieceSelection()}setupBlackTurn(){console.log("setting up black turn"),this.gameScene.currentPlayer=l.Black,this.setupPieceSelection()}clearActionsOnclick(){this.gameScene.input.on("pointerdown",(()=>{this.clearBoardActions()}))}setupPieceSelection(){this.gameScene.board.squares.flat().forEach((e=>{if(e.piece&&e.piece.colour===this.gameScene.currentPlayer){console.log("setting up piece selection: ",e.piece.name),e.setInteractive({useHandCursor:!0});const t=()=>{var t,s;console.log("piece clicked: ",null==(t=e.piece)?void 0:t.colour,null==(s=e.piece)?void 0:s.pieceType,e.coordinate),this.clearBoardActions(),this._selectedPiece=e.coordinate,e.highlight();const o=this.gameModel.boardModel.getPotentialMoves(e.coordinate);this.setupPieceSelection(),this.setupMoves(o.moves),this.setupCaptureMoves(o.captures)};e.on("pointerdown",t)}}))}clearBoardActions(){console.log("clearing board actions"),this.gameScene.board.squares.flat().forEach((e=>{e.disableInteractive(),e.off("pointerdown")})),this.gameScene.board.clearHighlights()}handlePieceClick(e,t){}setupMoves(e){e.forEach((e=>{const t=this.gameScene.board.squares[e.row][e.col];t.setInteractive({useHandCursor:!0}),t.highlightMove(),t.on("pointerdown",(()=>{this.clearBoardActions(),this.movePiece(e)}))}))}setupCaptureMoves(e){e.forEach((e=>{const t=this.gameScene.board.squares[e.row][e.col];t.setInteractive({useHandCursor:!0}),t.highlightCapture(),t.on("pointerdown",(()=>{this.clearBoardActions(),this.capturePiece(e)}))}))}movePiece(e){console.log("moving piece from: ",this._selectedPiece," to: ",e),this._selectedPiece&&(this.gameScene.board.movePiece(this._selectedPiece,e),this.gameModel.boardModel.movePiece(this._selectedPiece,e)),this.changeTurn()}capturePiece(e){console.log("capturing piece from: ",this._selectedPiece," to: ",e),this._selectedPiece&&(this.gameScene.board.capturePiece(this._selectedPiece,e),this.gameModel.boardModel.capturePiece(this._selectedPiece,e)),this.changeTurn()}redrawBoard(){this.gameScene.board.clearBoard(),this.gameScene.board.drawPieces()}changeTurn(){this.gameScene.board.flip(),this.gameScene.currentPlayer===l.White?this.setupBlackTurn():this.setupWhiteTurn()}}new Phaser.Events.EventEmitter;class _ extends s.Scene{constructor(){super("Game"),t(this,"board"),t(this,"camera"),t(this,"background"),t(this,"controller"),t(this,"currentPlayer",l.White),t(this,"potentialMoves",null),t(this,"_selectedPiece",null),t(this,"_inputHandler"),this.controller=new v(this)}create(){this.camera=this.cameras.main,this.camera.setBackgroundColor("#b88f77"),this.createBoard(this.controller.gameModel.boardModel),this.createUi(),this.controller.startGame()}createUi(){this.add.text(this.scale.width-20,20,"flip").setOrigin(1,.5).on(Phaser.Input.Events.POINTER_DOWN,(()=>this.board.flip())).setInteractive({useHandCursor:!0})}createBoard(e){this.board=new d(this,(this.scale.width-500)/2,(this.scale.height-500)/2,500,e),this.add.existing(this.board)}}class P extends s.Scene{constructor(){super("GameOver"),t(this,"camera"),t(this,"background"),t(this,"gameover_text")}create(){this.camera=this.cameras.main,this.camera.setBackgroundColor(16711680),this.background=this.add.image(512,384,"background"),this.background.setAlpha(.5),this.gameover_text=this.add.text(512,384,"Game Over",{fontFamily:"Arial Black",fontSize:64,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}),this.gameover_text.setOrigin(.5),this.input.once("pointerdown",(()=>{this.scene.start("MainMenu")}))}}class S extends s.Scene{constructor(){super("MainMenu"),t(this,"background"),t(this,"logo"),t(this,"title")}create(){this.background=this.add.image(512,384,"background"),this.logo=this.add.image(512,300,"logo"),this.title=this.add.text(512,460,"Main Menu",{fontFamily:"Arial Black",fontSize:38,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}).setOrigin(.5),this.input.once("pointerdown",(()=>{this.scene.start("Game")}))}}class y extends s.Scene{constructor(){super("Preloader")}init(){this.add.image(512,384,"background"),this.add.rectangle(512,384,468,32).setStrokeStyle(1,16777215);const e=this.add.rectangle(282,384,4,28,16777215);this.load.on("progress",(t=>{e.width=4+460*t}))}preload(){this.load.setPath("assets"),this.load.image("logo","logo.png")}create(){this.scene.start("Game")}}const B={type:Phaser.AUTO,width:1024,height:768,parent:"game-container",backgroundColor:"#028af8",scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},scene:[o,y,S,_,P]},C=new s.Game(B);window.__PHASER_GAME__=C;
